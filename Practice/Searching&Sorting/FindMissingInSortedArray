 int missingNumber(vector<int>& array, int n) {
        //using binary search (if array is sorted)
        //sort(array.begin(), array.end());
        
        int s=0;
        int e=n-1;
        //int e=n-2;
        int mid=s+(e-s)/2;
        int ans=0;
        
       // if(n==2 && array[0]==1)return 2;
        
        while(s<=e){
            
            if(array[mid] != mid+1){
                
                ans=mid+1;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
            
            mid=s+(e-s)/2;
        }
        
        if(ans==0)return n+1;
       // if(ans==0)return n-2+1;
        return ans;
    }


//
    int missingNumber(vector<int>& array, int n) {
        // Your code goes here
        int totalSum=0;
        totalSum=n*(n+1)/2;
        
        int arrSum=0;
        for(int i=0; i<n-1; i++){
            arrSum+=array[i];
        }
        
        return totalSum-arrSum;
}

//using XOR of all array elements and [1,n] range elements
