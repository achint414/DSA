//O(N) O(1)
vector<int> leaders(int a[], int n){
        // Code here
        vector<int>ans;
        
        int max = a[n-1];
        ans.push_back(max);
        
        for(int i=n-2; i>=0; i--){
            if(a[i] >= max){
                max=a[i];
                ans.push_back(max);
            }
        }
        
        reverse(ans.begin(), ans.end());
        return ans;
}

//O(N) O(N)
vector<int> leaders(int a[], int n){
        vector<int>ans;
        stack<int>st;
        st.push(a[n-1]);
        
        for(int i = n-2; i >= 0; i--){
            if(a[i] >= st.top()){
                st.push(a[i]);
            }
        }
        
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        return ans;
}