//O(k) O(1)

int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
        int c = 0; 
        int i=0, j=0;
        
        while(i<n && j<m){
            
            if(arr1[i] < arr2[j]){
                
                c++;
                if(c == k)return arr1[i];
                i++;
            }
            
            else{
                
                c++;
                if(c == k)return arr2[j];
                j++;
            }
        }
        
        while(i < n){
            
            c++;
            if(c == k)return arr1[i];
            i++; 
        }
        
        while(j < m){
            
            c++;
            if(c == k)return arr2[j];
            j++;
        }
    }

//O(n) O(m+n)

int kth(int arr1[], int arr2[], int m, int n, int k)
{
    int sorted1[m + n];
    int i = 0, j = 0, d = 0;
    while (i < m && j < n)
    {
        if (arr1[i] < arr2[j])
            sorted1[d++] = arr1[i++];
        else
            sorted1[d++] = arr2[j++];
    }
    while (i < m)
        sorted1[d++] = arr1[i++];
    while (j < n)
        sorted1[d++] = arr2[j++];
    return sorted1[k - 1];
}