//search space (0-dividend)
#include<cstdlib>
class Solution {
public:
    int divide(int dividend, int divisor) {
        //quotient * divisor + rem = dividend -> quotient * divisor <= dividend 
        
        int s=0;
        int e=abs(dividend);
        int mid=s+(e-s)/2;
        long long ans=0;

        if(dividend == 0) {
            return 0;
        }

        if (dividend == INT_MIN){

            if (divisor == -1){
                return INT_MAX;
            }
        else if (divisor == 1){
                return INT_MIN;
            }
        }

        while(s<=e){
            
            if(abs(mid * divisor) == abs(dividend)){
                ans=mid;
                break;
            }
            else if(abs(mid * divisor) < abs(dividend)){
                ans=mid;
                s=mid+1;
            }
            else{
                e=mid-1;
            }

            mid=s+(e-s)/2;
        }

        if((dividend<0 && divisor<0) || (dividend>0 && divisor>0))return ans;
        else return -1*ans;
    }
};